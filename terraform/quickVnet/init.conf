#cloud-config

# Upgrade the instance on first boot
# (ie run apt-get upgrade)
#
# Default: false
# Aliases: apt_upgrade
package_upgrade: true

# Install additional packages on first boot
#
# Default: none
#
# if packages are specified, this apt_update will be set to true
#
# packages may be supplied as a single package name or as a list
# with the format [<package>, <version>] wherein the specific
# package version will be installed.
packages:
 - pwgen
 - htop
 - sysstat
 - dstat
 - iotop
 - vim
 - molly-guard
 - unattended-upgrades
 - screen
 - mtr
 - nginx

# "disk_setup": disk partitioning
# --------------------------------

# The disk_setup directive instructs Cloud-init to partition a disk. The format is:
#
# disk_setup:
#    /dev/sdc:
#        table_type: 'mbr'
#        layout: true
#        overwrite: true

fs_setup:
    - label: None
      filesystem: 'ext4'
      device: '/dev/sdc'
      partition: 'auto'
      replace_fs: ntfs

mounts:
  - [ sdc, /opt, auto, "defaults" ]
mount_default_fields: [ None, None, "auto", "defaults,nofail", "0","2" ]

# Cmds we run on first boot and ONLY on first boot.
runcmd:
 # we need to set some permissions on the mount point
 - chmod 2755 /opt
 # Set some env vars we need to work with
 - export DOMAIN=cloud00.bestfamily.id.au
 #- export DROPLET_NAME=$(curl -s http://169.254.169.254/metadata/v1/hostname)
 #- export VMNAME=$(curl -H Metadata:true "http://169.254.169.254/metadata/instance/compute/name?api-version=2017-04-02&format=text")
 - export MYHOSTNAME=$(/bin/hostname)
 # Define the email we will use for our cert requests.
 - export EMAIL="festivus+letsencrypt@gmail.com"
 # install and config letsencrypt
 # install certbot, update
 - add-apt-repository ppa:certbot/certbot -y
 - apt-get update
 - apt install python-certbot-nginx -y
 # add domain name to nginx config, restart it
 #- sed -i 's/server_name _;/server_name '$MYHOSTNAME"."$DOMAIN';/' /etc/nginx/sites-available/default
 #- systemctl restart nginx
 - certbot --nginx -n -d $MYHOSTNAME"."$DOMAIN --email $EMAIL --agree-tos --redirect --hsts --staging
 #- sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
 # write ssl_dhparam directive to nginx config
 #- sed -i 's/server_name/ssl_dhparam \/etc\/ssl\/certs\/dhparam.pem;\n\tserver_name/' /etc/nginx/sites-available/default
 - systemctl reboot

write_files:
 # add letsencrypt renewal cron
 - owner: root:root
   path: /etc/cron.d/letsencrypt_renew
   content: "15 3 * * * /usr/bin/certbot renew --quiet"
